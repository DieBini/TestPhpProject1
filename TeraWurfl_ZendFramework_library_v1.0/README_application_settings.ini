
README:

This is a Terawurfl library to be easliy implemented in Zend Framework projects 
to handle handset detection.

Copy  Terawurfl folder to your library and the section below to your application.ini 
and change settings for your need

Then you have to download Terawurfl Api (http://www.tera-wurfl.com/wiki/index.php/Downloads) 
to the (/library)/Terawurfl/Api/ folder. It is recommended to implement this on a seperate 
server, so you just have to do this once and it can be used for all projects.
In this case you just have to implement a TeraWurflWebservice Adapater, as mentioned in the comments below.

By default you can use all provided device methods in controllers and views then.





; --------- TERAWURFL application.ini SETTINGS  --------- 
;  Terawurfl --- , Set autoloader namespace:
autoloadernamespaces.terawurfl = "Terawurfl_"

;  Terawurfl ---, Set View Helper path 
resources.view.helperPath.Terawurfl_View_Helper = 'Terawurfl/View/Helper'

;  Terawurfl  --- LOADER: initiates Controller Action helper if needed, checks configurations
pluginPaths.Terawurfl_Application_Resource = APPLICATION_PATH "/../library/Terawurfl/Application/Resource"
;       -  To use "Terawurfl_Controller_Action_Helper_Device()" set this to on/off:
resources.loader.useactionhelper = "on"
;       -  To check if you may have a conflict on device Helper :
;          NOTE: this will throw exception in case of configuration conflicts, to turn it off set it to "off":
resources.loader.checkviewhelper = "on"



;  Terawurfl --- STORAGE options of UserAgent configuration
;       -  USING CACHEMANAGER settings:
;              If you want to use cachemanager set yes: [yes/no]
resources.loader.usecachemanager = "yes"

;              - Set storage adapter and cache name:
resources.useragent.storage.adapter = "Terawurfl_Http_UserAgent_Storage_Cachemanager"
resources.useragent.storage.options.cachename = "teraw"

;              - Now you would still have to have memcached options set, may be you already have:
resources.cachemanager.teraw.frontend.name = "Core"
resources.cachemanager.teraw.backend.name = "Memcached"
resources.cachemanager.teraw.backend.options.servers.0.host = "localhost"
resources.cachemanager.teraw.backend.options.servers.0.port = 11211

;       - OR USING SESSION:
;   resources.useragent.storage.adapter = "Session"
;   resources.useragent.storage.options.browser_type = "all"
;   resources.useragent.storage.options.member = "data"



;   - NATIVE API, Download from http://www.tera-wurfl.com/wiki/index.php/Downloads to /library/Terawurfl/Api/    :
;     For admin usablility create Symlink:
;           - "cd /your/public/path/":
;           - "ln -s /path/to/my/library/Terawurfl/ twadmin"
;     Call admin by www.mydomain.de/twadmin then
;     If you install this Api on an external server instead (recommendet), 
;     create a TeraWurflWebservice Adapater in: 
;       /Terawurfl/Http/UserAgent/Features/Adapter/ to call via webservice
resources.useragent.terawurfl.terawurfl_lib_dir = APPLICATION_PATH "/../library/Terawurfl/Api"
resources.useragent.mobile.features.classname = "Zend_Http_UserAgent_Features_Adapter_TeraWurfl"
